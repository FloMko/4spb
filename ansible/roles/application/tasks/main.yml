---
- name: Ensure application root directory exists
  action: file path={{ app_dir }} state=directory

- name: Ensure application directory exists
  action: file path={{ app_dir }}/{{ item }} state=directory
  with_items:
    - ranking_system
    - vk_interaction_obj_rec
    - scheduler

- name: Copy docker-compose
  template:
    src: ../docker-compose.yml
    dest: '{{ app_dir }}'

- name: Copy api-py files
  copy:
    src: ../ranking_system/{{ item }}
    dest: '{{ app_dir }}/ranking_system/'
  with_items:
    - Dockerfile
    - codebase

- name: Ensure ranking system's directories exists
  action: file path={{ app_dir }}/ranking_system{{ item }} state=directory
  with_items:
    - "{{ cluster_path }}"
    - "{{ dataset_path }}"
    - "{{ temp_path }}"
    - "{{ weights_path }}"

- name: Copy api-js files
  copy:
    src: ../vk_interaction_obj_rec/{{ item }}
    dest: '{{ app_dir }}/vk_interaction_obj_rec/'
  with_items:
    - Dockerfile
    - codebase
    - .env

- name: Copy scheduler-py files
  copy:
    src: ../scheduler/{{ item }}
    dest: '{{ app_dir }}/scheduler/'
  with_items:
    - Dockerfile
    - codebase

- name: stop docker
  docker_compose:
    project_src: '{{ app_dir }}'
    state: absent
  tags: restart

- name: prune docker
  command: docker system prune --volumes -af

- name: build images
  shell: "docker-compose build"
  args:
    chdir: "{{ app_dir }}"
  tags: restart

- name: pull images
  shell: "docker-compose pull"
  args:
    chdir: "{{ app_dir }}"
  tags: restart

- name: start docker
  docker_compose:
    project_src: '{{ app_dir }}'
    state: present
  tags: restart

- name: batch init db
  command: docker exec -i 4spb_api-python_1 bash -c 'python3 main.py'
  tags: [never, init]